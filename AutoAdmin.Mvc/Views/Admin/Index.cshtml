@model IEnumerable<object>

    @using AutoAdmin.Mvc.Extensions
    @using AutoAdmin.Mvc;
    @{
        ViewBag.Title = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = Configuration.IndexConfiguration.AddClass })
    </p>
    <table class="@Configuration.IndexConfiguration.TableClass">
        <tr>
            @{ var properties = Model.FirstOrDefault()?.GetType().GetProperties(); }
            @if (properties != null)
            {

                foreach (var property in properties)
                {
                    if (property.PropertyType.IsGenericType || (property.PropertyType != typeof(string) && property.PropertyType.IsClass))
                    {
                        continue;
                    }
                    <th>
                        @property.Name
                        @*@Html.DisplayNameFor(x => property.GetValue(Model.First()))*@
                    </th>
                }

            }
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                @foreach (var property in properties)
                {
                    if (property.PropertyType.IsGenericType || (property.PropertyType != typeof(string) && property.PropertyType.IsClass))
                    {
                        continue;
                    }
                    <td>
                        @Html.AutoDisplayFor(property)
                        @*@Html.Display(property.Name)*@
                        @*@property.GetValue(item)*@
                    </td>
                }

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.GetPrimaryKeyValue() }, new { @class = Configuration.IndexConfiguration.EditClass }) |
                    @Html.ActionLink("Details", "Details", new { id = item.GetPrimaryKeyValue() }, new { @class = Configuration.IndexConfiguration.DetailClass }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.GetPrimaryKeyValue() }, new { @class = Configuration.IndexConfiguration.DeleteClass })
                </td>
            </tr>
        }

    </table>
